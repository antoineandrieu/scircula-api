# Generated by Django 3.1.7 on 2021-04-14 14:04
import random

from django.db import migrations


def add_product_size_vendor(apps, schema_editor):
    """
    Set default product vendor
    """
    CustomerAnalytic = apps.get_model("customers", "CustomerAnalytic")
    ProductVendor = apps.get_model("products", "ProductVendor")
    ProductSize = apps.get_model("products", "ProductSize")
    ProductSizeVendor = apps.get_model("products", "ProductSizeVendor")

    for customer_analytic in CustomerAnalytic.objects.all():
        product_size_vendor = None
        product_vendors = ProductVendor.objects.filter(
            product=customer_analytic.product
        )
        if product_vendors.count() == 1:
            product_vendor = product_vendors[0]
            try:
                product_size_vendor = ProductSizeVendor.objects.get(
                    product_vendor=product_vendor, product_size=customer_analytic.size
                )
            except ProductSizeVendor.DoesNotExist:
                pass
        else:
            vendors = []
            for product_vendor in product_vendors:
                vendors.append(product_vendor.vendor)

            product_size_vendors = ProductSizeVendor.objects.filter(
                product_size=customer_analytic.size,
                vendor__in=vendors,
            )
            if product_size_vendors.count() > 0:
                # We have no mean to know to what vendor the analytic was linked
                product_size_vendor = random.choice(product_size_vendors)

        customer_analytic.product_vendor = product_vendor
        customer_analytic.product_size_vendor = product_size_vendor
        customer_analytic.save()


class Migration(migrations.Migration):

    dependencies = [
        ("customers", "0019_customeranalytic_product_vendor"),
    ]

    operations = [
        migrations.RunPython(add_product_size_vendor),
    ]
